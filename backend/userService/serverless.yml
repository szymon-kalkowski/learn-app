service: userservice

frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x

  stage: dev
  region: us-east-1

  httpApi:
    cors:
      allowedOrigins:
        - "http://localhost:4200"
        - "https://d2do5lc8ywvzh0.cloudfront.net"
      allowedHeaders:
        - "*"
      exposedResponseHeaders:
        - "*"
      allowCredentials: true
    authorizers:
      jwtAuthorizer:
        type: request
        functionName: jwtAuthorizer

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:*"
          Resource:
            - "arn:aws:dynamodb:us-east-1:*:*"

  environment:
    JWT_SECRET: ${env.JWT_SECRET}

functions:
  register:
    handler: auth.register
    events:
      - httpApi:
          path: /auth/register
          method: post
  login:
    handler: auth.login
    events:
      - httpApi:
          path: /auth/login
          method: post
  jwtAuthorizer:
    handler: auth.jwtAuthorizer
  getMe:
    handler: user.getMe
    events:
      - httpApi:
          path: /users/me
          method: get
          authorizer:
            name: jwtAuthorizer
  deleteMe:
    handler: user.deleteMe
    events:
      - httpApi:
          path: /users/me
          method: delete
          authorizer:
            name: jwtAuthorizer
  updateMe:
    handler: user.updateMe
    events:
      - httpApi:
          path: /users/me
          method: put
          authorizer:
            name: jwtAuthorizer
  updatePassword:
    handler: user.updatePassword
    events:
      - httpApi:
          path: /users/update-password
          method: put
          authorizer:
            name: jwtAuthorizer
  getTrainers:
    handler: user.getTrainers
    events:
      - httpApi:
          path: /users/trainers
          method: get

resources:
  Resources:
    UserTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: role
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: RoleIndex
            KeySchema:
              - AttributeName: role
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    StudentsTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: students
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    TrainersTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: trainers
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    SpecializationsTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: specializations
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
